2023-07-11 16:05:04,610 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.3.5
	PyTorch: 1.9.0+cu111
	TorchVision: 0.10.0+cu111
2023-07-11 16:05:04,611 INFO: 
  name: MDRN_test_X4
  model_type: SRModel
  scale: 4
  num_gpu: 1
  manual_seed: 0
  datasets:[
    test_1:[
      name: Set5
      type: PairedImageDataset
      dataroot_gt: F:\CNN_Trans\testsets\Set5\HR_mod4
      dataroot_lq: F:\CNN_Trans\testsets\Set5\X4
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
    test_2:[
      name: Set14
      type: PairedImageDataset
      dataroot_gt: F:\CNN_Trans\testsets\Set14\HR_mod4
      dataroot_lq: F:\CNN_Trans\testsets\Set14\X4
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
    test_3:[
      name: Urban100
      type: PairedImageDataset
      dataroot_gt: F:\CNN_Trans\testsets\urban100\HR_mod4
      dataroot_lq: F:\CNN_Trans\testsets\urban100\X4
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
    test_4:[
      name: Manga109
      type: PairedImageDataset
      dataroot_gt: F:\CNN_Trans\testsets\Manga109\HR_mod4
      dataroot_lq: F:\CNN_Trans\testsets\Manga109\X4
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
    test_5:[
      name: BSDS100
      type: PairedImageDataset
      dataroot_gt: F:\CNN_Trans\testsets\BSDS100\HR_mod4
      dataroot_lq: F:\CNN_Trans\testsets\BSDS100\X4
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
  ]
  network_g:[
    type: MDRN
    upscale: 4
  ]
  path:[
    pretrain_network_g: F:\MDRN_train\pretrain_models\mdrn_x4.pth
    strict_load_g: True
    param_key_g: params_ema
    results_root: F:\MDRN_train\results\MDRN_test_X4
    log: F:\MDRN_train\results\MDRN_test_X4
    visualization: F:\MDRN_train\results\MDRN_test_X4\visualization
  ]
  val:[
    save_img: True
    suffix: None
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 4
        test_y_channel: True
      ]
      ssim:[
        type: calculate_ssim
        crop_border: 4
        test_y_channel: True
      ]
    ]
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: False
  is_train: False

2023-07-11 16:05:04,611 INFO: Dataset [PairedImageDataset] - Set5 is built.
2023-07-11 16:05:04,611 INFO: Number of test images in Set5: 5
2023-07-11 16:05:04,612 INFO: Dataset [PairedImageDataset] - Set14 is built.
2023-07-11 16:05:04,612 INFO: Number of test images in Set14: 14
2023-07-11 16:05:04,616 INFO: Dataset [PairedImageDataset] - Urban100 is built.
2023-07-11 16:05:04,617 INFO: Number of test images in Urban100: 100
2023-07-11 16:05:04,621 INFO: Dataset [PairedImageDataset] - Manga109 is built.
2023-07-11 16:05:04,621 INFO: Number of test images in Manga109: 109
2023-07-11 16:05:04,625 INFO: Dataset [PairedImageDataset] - BSDS100 is built.
2023-07-11 16:05:04,625 INFO: Number of test images in BSDS100: 100
2023-07-11 16:05:04,648 INFO: Network [MDRN] is created.
2023-07-11 16:05:05,676 INFO: Network: MDRN, with parameters: 321,904
2023-07-11 16:05:05,676 INFO: MDRN(
  (fea_conv): Conv2d(3, 56, kernel_size=(3, 3), stride=(1, 1), padding=same)
  (B1): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B2): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B3): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B4): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B5): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B6): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B7): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (B8): EADB(
    (c1_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c1_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c2_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c2_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c3_d): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1))
    (c3_r): BSConvU(
      (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
    )
    (c4): BSConvU(
      (pw): Conv2d(56, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (dw): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, padding_mode=reflect)
    )
    (act): GELU()
    (c5): Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1))
    (esa): MDSA(
      (body): Sequential(
        (0): ESA(
          (conv1): Conv2d(56, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv2_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv2_3): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (maxPooling_0): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
          (maxPooling_1): MaxPool2d(kernel_size=5, stride=3, padding=0, dilation=1, ceil_mode=False)
          (maxPooling_2): MaxPool2d(kernel_size=7, stride=3, padding=1, dilation=1, ceil_mode=False)
          (conv_max_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv_max_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_0): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_1): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv3_2): BSConvU(
            (pw): Conv2d(14, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dw): Conv2d(14, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=14, padding_mode=reflect)
          )
          (conv4): Conv2d(14, 56, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (GELU): GELU()
        )
      )
    )
    (cca): ECCA(
      (body): Sequential(
        (0): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), padding=same)
        (1): GELU()
        (2): CCALayer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv_du): Sequential(
            (0): Conv2d(56, 3, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(3, 56, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (3): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=56)
      )
    )
  )
  (c1): Conv2d(448, 56, kernel_size=(1, 1), stride=(1, 1))
  (GELU): GELU()
  (c2): BSConvU(
    (pw): Conv2d(56, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (dw): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, padding_mode=reflect)
  )
  (upsampler): PixelShuffleDirect(
    (upsampleOneStep): UpsampleOneStep(
      (0): Conv2d(56, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=4)
    )
  )
)
2023-07-11 16:05:05,699 INFO: Loading MDRN model from F:\MDRN_train\pretrain_models\mdrn_x4.pth, with param key: [params_ema].
2023-07-11 16:05:05,755 INFO: Model [SRModel] is created.
2023-07-11 16:05:05,755 INFO: Testing Set5...
2023-07-11 16:05:08,193 INFO: Validation Set5
	 # psnr: 32.3466	Best: 32.3466 @ MDRN_test_X4 iter
	 # ssim: 0.8970	Best: 0.8970 @ MDRN_test_X4 iter

2023-07-11 16:05:08,193 INFO: Testing Set14...
2023-07-11 16:05:12,850 INFO: Validation Set14
	 # psnr: 28.7979	Best: 28.7979 @ MDRN_test_X4 iter
	 # ssim: 0.7861	Best: 0.7861 @ MDRN_test_X4 iter

2023-07-11 16:05:12,851 INFO: Testing Urban100...
2023-07-11 16:06:14,353 INFO: Validation Urban100
	 # psnr: 26.5958	Best: 26.5958 @ MDRN_test_X4 iter
	 # ssim: 0.8005	Best: 0.8005 @ MDRN_test_X4 iter

2023-07-11 16:06:14,356 INFO: Testing Manga109...
2023-07-11 16:07:22,294 INFO: Validation Manga109
	 # psnr: 31.0164	Best: 31.0164 @ MDRN_test_X4 iter
	 # ssim: 0.9146	Best: 0.9146 @ MDRN_test_X4 iter

2023-07-11 16:07:22,296 INFO: Testing BSDS100...
2023-07-11 16:07:34,693 INFO: Validation BSDS100
	 # psnr: 27.6927	Best: 27.6927 @ MDRN_test_X4 iter
	 # ssim: 0.7404	Best: 0.7404 @ MDRN_test_X4 iter

